{
  "contractName": "ERC4907",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint64",
          "name": "expires",
          "type": "uint64"
        }
      ],
      "name": "UpdateUser",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "expires",
          "type": "uint64"
        }
      ],
      "name": "setUser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "userExpires",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "userOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50d380156200001f57600080fd5b50d280156200002d57600080fd5b5060405162002f0738038062002f078339818101604052810190620000539190620001bf565b818181600090805190602001906200006d92919062000091565b5080600190805190602001906200008692919062000091565b5050505050620003c8565b8280546200009f90620002d9565b90600052602060002090601f016020900481019282620000c357600085556200010f565b82601f10620000de57805160ff19168380011785556200010f565b828001600101855582156200010f579182015b828111156200010e578251825591602001919060010190620000f1565b5b5090506200011e919062000122565b5090565b5b808211156200013d57600081600090555060010162000123565b5090565b60006200015862000152846200026d565b62000244565b905082815260208101848484011115620001775762000176620003a8565b5b62000184848285620002a3565b509392505050565b600082601f830112620001a457620001a3620003a3565b5b8151620001b684826020860162000141565b91505092915050565b60008060408385031215620001d957620001d8620003b2565b5b600083015167ffffffffffffffff811115620001fa57620001f9620003ad565b5b62000208858286016200018c565b925050602083015167ffffffffffffffff8111156200022c576200022b620003ad565b5b6200023a858286016200018c565b9150509250929050565b60006200025062000263565b90506200025e82826200030f565b919050565b6000604051905090565b600067ffffffffffffffff8211156200028b576200028a62000374565b5b6200029682620003b7565b9050602081019050919050565b60005b83811015620002c3578082015181840152602081019050620002a6565b83811115620002d3576000848401525b50505050565b60006002820490506001821680620002f257607f821691505b6020821081141562000309576200030862000345565b5b50919050565b6200031a82620003b7565b810181811067ffffffffffffffff821117156200033c576200033b62000374565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b612b2f80620003d86000396000f3fe608060405234801561001057600080fd5b50d3801561001d57600080fd5b50d2801561002a57600080fd5b506004361061011a5760003560e01c80638fc88c48116100b1578063c2f1f14a11610080578063c2f1f14a146102d7578063c87b56dd14610307578063e030565e14610337578063e985e9c5146103535761011a565b80638fc88c481461025157806395d89b4114610281578063a22cb4651461029f578063b88d4fde146102bb5761011a565b806323b872dd116100ed57806323b872dd146101b957806342842e0e146101d55780636352211e146101f157806370a08231146102215761011a565b806301ffc9a71461011f57806306fdde031461014f578063081812fc1461016d578063095ea7b31461019d575b600080fd5b61013960048036038101906101349190611e6d565b610383565b6040516101469190612241565b60405180910390f35b6101576103fd565b6040516101649190612277565b60405180910390f35b61018760048036038101906101829190611ec7565b61048f565b60405161019491906121da565b60405180910390f35b6101b760048036038101906101b29190611e2d565b6104d5565b005b6101d360048036038101906101ce9190611d17565b6105ed565b005b6101ef60048036038101906101ea9190611d17565b61064d565b005b61020b60048036038101906102069190611ec7565b61066d565b60405161021891906121da565b60405180910390f35b61023b60048036038101906102369190611caa565b6106f4565b60405161024891906123f9565b60405180910390f35b61026b60048036038101906102669190611ec7565b6107ac565b60405161027891906123f9565b60405180910390f35b6102896107ea565b6040516102969190612277565b60405180910390f35b6102b960048036038101906102b49190611ded565b61087c565b005b6102d560048036038101906102d09190611d6a565b610892565b005b6102f160048036038101906102ec9190611ec7565b6108f4565b6040516102fe91906121da565b60405180910390f35b610321600480360381019061031c9190611ec7565b610979565b60405161032e9190612277565b60405180910390f35b610351600480360381019061034c9190611ef4565b610a8c565b005b61036d60048036038101906103689190611cd7565b610c26565b60405161037a9190612241565b60405180910390f35b60007fad092b5c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103f657506103f582610cba565b5b9050919050565b60606000805461040c9061264f565b80601f01602080910402602001604051908101604052809291908181526020018280546104389061264f565b80156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b5050505050905090565b600061049a82610d9c565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104e08261066d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890612379565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610570610de7565b73ffffffffffffffffffffffffffffffffffffffff16148061059f575061059e81610599610de7565b610c26565b5b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590612399565b60405180910390fd5b6105e88383610def565b505050565b6105fe6105f8610de7565b82610ea8565b61063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490612299565b60405180910390fd5b610648838383610f3d565b505050565b61066883838360405180602001604052806000815250610892565b505050565b60008061067983611237565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e290612359565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90612339565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006007600083815260200190815260200160002060000160149054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b6060600180546107f99061264f565b80601f01602080910402602001604051908101604052809291908181526020018280546108259061264f565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b5050505050905090565b61088e610887610de7565b8383611274565b5050565b6108a361089d610de7565b83610ea8565b6108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990612299565b60405180910390fd5b6108ee848484846113e1565b50505050565b6000426007600084815260200190815260200160002060000160149054906101000a900467ffffffffffffffff1667ffffffffffffffff161061096f576007600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610974565b600090505b919050565b606061098482610d9c565b60006006600084815260200190815260200160002080546109a49061264f565b80601f01602080910402602001604051908101604052809291908181526020018280546109d09061264f565b8015610a1d5780601f106109f257610100808354040283529160200191610a1d565b820191906000526020600020905b815481529060010190602001808311610a0057829003601f168201915b505050505090506000610a2e61143d565b9050600081511415610a44578192505050610a87565b600082511115610a79578082604051602001610a619291906121b6565b60405160208183030381529060405292505050610a87565b610a8284611454565b925050505b919050565b6000600760008581526020019081526020016000209050610aad3385610ea8565b610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae3906123b9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16610b0d856108f4565b73ffffffffffffffffffffffffffffffffffffffff1614610b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a906123d9565b60405180910390fd5b828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff16847f4e06b4e7000e659094299b3533b47b6aa8ad048e95e872d23d1f4ee55af89cfe84604051610c189190612414565b60405180910390a350505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d8557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610d955750610d94826114bc565b5b9050919050565b610da581611526565b610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90612359565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610e628361066d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610eb48361066d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610ef65750610ef58185610c26565b5b80610f3457508373ffffffffffffffffffffffffffffffffffffffff16610f1c8461048f565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610f5d8261066d565b73ffffffffffffffffffffffffffffffffffffffff1614610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa906122d9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101a906122f9565b60405180910390fd5b6110308383836001611567565b8273ffffffffffffffffffffffffffffffffffffffff166110508261066d565b73ffffffffffffffffffffffffffffffffffffffff16146110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109d906122d9565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461123283838360016116c8565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112da90612319565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113d49190612241565b60405180910390a3505050565b6113ec848484610f3d565b6113f8848484846116ce565b611437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142e906122b9565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606061145f82610d9c565b600061146961143d565b9050600081511161148957604051806020016040528060008152506114b4565b8061149384611860565b6040516020016114a49291906121b6565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661154883611237565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6115748484846001611938565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156116135750600073ffffffffffffffffffffffffffffffffffffffff166007600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156116c25760076000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549067ffffffffffffffff02191690555050600073ffffffffffffffffffffffffffffffffffffffff16827f4e06b4e7000e659094299b3533b47b6aa8ad048e95e872d23d1f4ee55af89cfe60006040516116b9919061225c565b60405180910390a35b50505050565b50505050565b6000808473ffffffffffffffffffffffffffffffffffffffff163b1115611853578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611713610de7565b8786866040518563ffffffff1660e01b815260040161173594939291906121f5565b602060405180830381600087803b15801561174f57600080fd5b505af192505050801561178057506040513d601f19601f8201168201806040525081019061177d9190611e9a565b60015b611803573d80600081146117b0576040519150601f19603f3d011682016040523d82523d6000602084013e6117b5565b606091505b506000815114156117fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f2906122b9565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611858565b600190505b949350505050565b60606000600161186f84611a5e565b01905060008167ffffffffffffffff81111561188e5761188d61273f565b5b6040519080825280601f01601f1916602001820160405280156118c05781602001600182028036833780820191505090505b509050600082602001820190505b60011561192d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611917576119166126e1565b5b04945060008514156119285761192d565b6118ce565b819350505050919050565b6001811115611a5857600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146119cc5780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119c4919061251e565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611a575780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a4f91906124c8565b925050819055505b5b50505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611abc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611ab257611ab16126e1565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611af9576d04ee2d6d415b85acef81000000008381611aef57611aee6126e1565b5b0492506020810190505b662386f26fc100008310611b2857662386f26fc100008381611b1e57611b1d6126e1565b5b0492506010810190505b6305f5e1008310611b51576305f5e1008381611b4757611b466126e1565b5b0492506008810190505b6127108310611b76576127108381611b6c57611b6b6126e1565b5b0492506004810190505b60648310611b995760648381611b8f57611b8e6126e1565b5b0492506002810190505b600a8310611ba8576001810190505b80915050919050565b6000611bc4611bbf84612454565b61242f565b905082815260208101848484011115611be057611bdf612773565b5b611beb84828561260d565b509392505050565b600081359050611c0281612a86565b611c0b81612552565b905092915050565b600081359050611c2281612a9d565b92915050565b600081359050611c3781612ab4565b92915050565b600081519050611c4c81612ab4565b92915050565b600082601f830112611c6757611c6661276e565b5b8135611c77848260208601611bb1565b91505092915050565b600081359050611c8f81612acb565b92915050565b600081359050611ca481612ae2565b92915050565b600060208284031215611cc057611cbf61277d565b5b6000611cce84828501611bf3565b91505092915050565b60008060408385031215611cee57611ced61277d565b5b6000611cfc85828601611bf3565b9250506020611d0d85828601611bf3565b9150509250929050565b600080600060608486031215611d3057611d2f61277d565b5b6000611d3e86828701611bf3565b9350506020611d4f86828701611bf3565b9250506040611d6086828701611c80565b9150509250925092565b60008060008060808587031215611d8457611d8361277d565b5b6000611d9287828801611bf3565b9450506020611da387828801611bf3565b9350506040611db487828801611c80565b925050606085013567ffffffffffffffff811115611dd557611dd4612778565b5b611de187828801611c52565b91505092959194509250565b60008060408385031215611e0457611e0361277d565b5b6000611e1285828601611bf3565b9250506020611e2385828601611c13565b9150509250929050565b60008060408385031215611e4457611e4361277d565b5b6000611e5285828601611bf3565b9250506020611e6385828601611c80565b9150509250929050565b600060208284031215611e8357611e8261277d565b5b6000611e9184828501611c28565b91505092915050565b600060208284031215611eb057611eaf61277d565b5b6000611ebe84828501611c3d565b91505092915050565b600060208284031215611edd57611edc61277d565b5b6000611eeb84828501611c80565b91505092915050565b600080600060608486031215611f0d57611f0c61277d565b5b6000611f1b86828701611c80565b9350506020611f2c86828701611bf3565b9250506040611f3d86828701611c95565b9150509250925092565b611f5081612552565b82525050565b611f5f81612564565b82525050565b6000611f7082612485565b611f7a818561249b565b9350611f8a81856020860161261c565b611f9381612782565b840191505092915050565b611fa7816125fb565b82525050565b6000611fb882612490565b611fc281856124ac565b9350611fd281856020860161261c565b611fdb81612782565b840191505092915050565b6000611ff182612490565b611ffb81856124bd565b935061200b81856020860161261c565b80840191505092915050565b6000612024602d836124ac565b915061202f82612793565b604082019050919050565b60006120476032836124ac565b9150612052826127e2565b604082019050919050565b600061206a6025836124ac565b915061207582612831565b604082019050919050565b600061208d6024836124ac565b915061209882612880565b604082019050919050565b60006120b06019836124ac565b91506120bb826128cf565b602082019050919050565b60006120d36029836124ac565b91506120de826128f8565b604082019050919050565b60006120f66018836124ac565b915061210182612947565b602082019050919050565b60006121196021836124ac565b915061212482612970565b604082019050919050565b600061213c603d836124ac565b9150612147826129bf565b604082019050919050565b600061215f6031836124ac565b915061216a82612a0e565b604082019050919050565b60006121826010836124ac565b915061218d82612a5d565b602082019050919050565b6121a1816125dd565b82525050565b6121b0816125e7565b82525050565b60006121c28285611fe6565b91506121ce8284611fe6565b91508190509392505050565b60006020820190506121ef6000830184611f47565b92915050565b600060808201905061220a6000830187611f47565b6122176020830186611f47565b6122246040830185612198565b81810360608301526122368184611f65565b905095945050505050565b60006020820190506122566000830184611f56565b92915050565b60006020820190506122716000830184611f9e565b92915050565b600060208201905081810360008301526122918184611fad565b905092915050565b600060208201905081810360008301526122b281612017565b9050919050565b600060208201905081810360008301526122d28161203a565b9050919050565b600060208201905081810360008301526122f28161205d565b9050919050565b6000602082019050818103600083015261231281612080565b9050919050565b60006020820190508181036000830152612332816120a3565b9050919050565b60006020820190508181036000830152612352816120c6565b9050919050565b60006020820190508181036000830152612372816120e9565b9050919050565b600060208201905081810360008301526123928161210c565b9050919050565b600060208201905081810360008301526123b28161212f565b9050919050565b600060208201905081810360008301526123d281612152565b9050919050565b600060208201905081810360008301526123f281612175565b9050919050565b600060208201905061240e6000830184612198565b92915050565b600060208201905061242960008301846121a7565b92915050565b600061243961244a565b90506124458282612681565b919050565b6000604051905090565b600067ffffffffffffffff82111561246f5761246e61273f565b5b61247882612782565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006124d3826125dd565b91506124de836125dd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612513576125126126b2565b5b828201905092915050565b6000612529826125dd565b9150612534836125dd565b925082821015612547576125466126b2565b5b828203905092915050565b600061255d8261259c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600074ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000612606826125e7565b9050919050565b82818337600083830152505050565b60005b8381101561263a57808201518184015260208101905061261f565b83811115612649576000848401525b50505050565b6000600282049050600182168061266757607f821691505b6020821081141561267b5761267a612710565b5b50919050565b61268a82612782565b810181811067ffffffffffffffff821117156126a9576126a861273f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f7573657220616c72656164792073657400000000000000000000000000000000600082015250565b612a8f816125bc565b8114612a9a57600080fd5b50565b612aa681612564565b8114612ab157600080fd5b50565b612abd81612570565b8114612ac857600080fd5b50565b612ad4816125dd565b8114612adf57600080fd5b50565b612aeb816125e7565b8114612af657600080fd5b5056fea26474726f6e58221220ee24643997cdc4f7c73876049ed2ac59df81a85e9f0c43ecfe4c9d8fbe480e2d64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50d3801561001d57600080fd5b50d2801561002a57600080fd5b506004361061011a5760003560e01c80638fc88c48116100b1578063c2f1f14a11610080578063c2f1f14a146102d7578063c87b56dd14610307578063e030565e14610337578063e985e9c5146103535761011a565b80638fc88c481461025157806395d89b4114610281578063a22cb4651461029f578063b88d4fde146102bb5761011a565b806323b872dd116100ed57806323b872dd146101b957806342842e0e146101d55780636352211e146101f157806370a08231146102215761011a565b806301ffc9a71461011f57806306fdde031461014f578063081812fc1461016d578063095ea7b31461019d575b600080fd5b61013960048036038101906101349190611e6d565b610383565b6040516101469190612241565b60405180910390f35b6101576103fd565b6040516101649190612277565b60405180910390f35b61018760048036038101906101829190611ec7565b61048f565b60405161019491906121da565b60405180910390f35b6101b760048036038101906101b29190611e2d565b6104d5565b005b6101d360048036038101906101ce9190611d17565b6105ed565b005b6101ef60048036038101906101ea9190611d17565b61064d565b005b61020b60048036038101906102069190611ec7565b61066d565b60405161021891906121da565b60405180910390f35b61023b60048036038101906102369190611caa565b6106f4565b60405161024891906123f9565b60405180910390f35b61026b60048036038101906102669190611ec7565b6107ac565b60405161027891906123f9565b60405180910390f35b6102896107ea565b6040516102969190612277565b60405180910390f35b6102b960048036038101906102b49190611ded565b61087c565b005b6102d560048036038101906102d09190611d6a565b610892565b005b6102f160048036038101906102ec9190611ec7565b6108f4565b6040516102fe91906121da565b60405180910390f35b610321600480360381019061031c9190611ec7565b610979565b60405161032e9190612277565b60405180910390f35b610351600480360381019061034c9190611ef4565b610a8c565b005b61036d60048036038101906103689190611cd7565b610c26565b60405161037a9190612241565b60405180910390f35b60007fad092b5c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103f657506103f582610cba565b5b9050919050565b60606000805461040c9061264f565b80601f01602080910402602001604051908101604052809291908181526020018280546104389061264f565b80156104855780601f1061045a57610100808354040283529160200191610485565b820191906000526020600020905b81548152906001019060200180831161046857829003601f168201915b5050505050905090565b600061049a82610d9c565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104e08261066d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054890612379565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610570610de7565b73ffffffffffffffffffffffffffffffffffffffff16148061059f575061059e81610599610de7565b610c26565b5b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590612399565b60405180910390fd5b6105e88383610def565b505050565b6105fe6105f8610de7565b82610ea8565b61063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490612299565b60405180910390fd5b610648838383610f3d565b505050565b61066883838360405180602001604052806000815250610892565b505050565b60008061067983611237565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156106eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e290612359565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90612339565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006007600083815260200190815260200160002060000160149054906101000a900467ffffffffffffffff1667ffffffffffffffff169050919050565b6060600180546107f99061264f565b80601f01602080910402602001604051908101604052809291908181526020018280546108259061264f565b80156108725780601f1061084757610100808354040283529160200191610872565b820191906000526020600020905b81548152906001019060200180831161085557829003601f168201915b5050505050905090565b61088e610887610de7565b8383611274565b5050565b6108a361089d610de7565b83610ea8565b6108e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d990612299565b60405180910390fd5b6108ee848484846113e1565b50505050565b6000426007600084815260200190815260200160002060000160149054906101000a900467ffffffffffffffff1667ffffffffffffffff161061096f576007600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610974565b600090505b919050565b606061098482610d9c565b60006006600084815260200190815260200160002080546109a49061264f565b80601f01602080910402602001604051908101604052809291908181526020018280546109d09061264f565b8015610a1d5780601f106109f257610100808354040283529160200191610a1d565b820191906000526020600020905b815481529060010190602001808311610a0057829003601f168201915b505050505090506000610a2e61143d565b9050600081511415610a44578192505050610a87565b600082511115610a79578082604051602001610a619291906121b6565b60405160208183030381529060405292505050610a87565b610a8284611454565b925050505b919050565b6000600760008581526020019081526020016000209050610aad3385610ea8565b610aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae3906123b9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16610b0d856108f4565b73ffffffffffffffffffffffffffffffffffffffff1614610b63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5a906123d9565b60405180910390fd5b828160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160000160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff16847f4e06b4e7000e659094299b3533b47b6aa8ad048e95e872d23d1f4ee55af89cfe84604051610c189190612414565b60405180910390a350505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610d8557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610d955750610d94826114bc565b5b9050919050565b610da581611526565b610de4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ddb90612359565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610e628361066d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610eb48361066d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610ef65750610ef58185610c26565b5b80610f3457508373ffffffffffffffffffffffffffffffffffffffff16610f1c8461048f565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610f5d8261066d565b73ffffffffffffffffffffffffffffffffffffffff1614610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa906122d9565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161101a906122f9565b60405180910390fd5b6110308383836001611567565b8273ffffffffffffffffffffffffffffffffffffffff166110508261066d565b73ffffffffffffffffffffffffffffffffffffffff16146110a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109d906122d9565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461123283838360016116c8565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156112e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112da90612319565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113d49190612241565b60405180910390a3505050565b6113ec848484610f3d565b6113f8848484846116ce565b611437576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142e906122b9565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606061145f82610d9c565b600061146961143d565b9050600081511161148957604051806020016040528060008152506114b4565b8061149384611860565b6040516020016114a49291906121b6565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661154883611237565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6115748484846001611938565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141580156116135750600073ffffffffffffffffffffffffffffffffffffffff166007600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b156116c25760076000838152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549067ffffffffffffffff02191690555050600073ffffffffffffffffffffffffffffffffffffffff16827f4e06b4e7000e659094299b3533b47b6aa8ad048e95e872d23d1f4ee55af89cfe60006040516116b9919061225c565b60405180910390a35b50505050565b50505050565b6000808473ffffffffffffffffffffffffffffffffffffffff163b1115611853578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611713610de7565b8786866040518563ffffffff1660e01b815260040161173594939291906121f5565b602060405180830381600087803b15801561174f57600080fd5b505af192505050801561178057506040513d601f19601f8201168201806040525081019061177d9190611e9a565b60015b611803573d80600081146117b0576040519150601f19603f3d011682016040523d82523d6000602084013e6117b5565b606091505b506000815114156117fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f2906122b9565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611858565b600190505b949350505050565b60606000600161186f84611a5e565b01905060008167ffffffffffffffff81111561188e5761188d61273f565b5b6040519080825280601f01601f1916602001820160405280156118c05781602001600182028036833780820191505090505b509050600082602001820190505b60011561192d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611917576119166126e1565b5b04945060008514156119285761192d565b6118ce565b819350505050919050565b6001811115611a5857600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146119cc5780600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119c4919061251e565b925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611a575780600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a4f91906124c8565b925050819055505b5b50505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611abc577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611ab257611ab16126e1565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611af9576d04ee2d6d415b85acef81000000008381611aef57611aee6126e1565b5b0492506020810190505b662386f26fc100008310611b2857662386f26fc100008381611b1e57611b1d6126e1565b5b0492506010810190505b6305f5e1008310611b51576305f5e1008381611b4757611b466126e1565b5b0492506008810190505b6127108310611b76576127108381611b6c57611b6b6126e1565b5b0492506004810190505b60648310611b995760648381611b8f57611b8e6126e1565b5b0492506002810190505b600a8310611ba8576001810190505b80915050919050565b6000611bc4611bbf84612454565b61242f565b905082815260208101848484011115611be057611bdf612773565b5b611beb84828561260d565b509392505050565b600081359050611c0281612a86565b611c0b81612552565b905092915050565b600081359050611c2281612a9d565b92915050565b600081359050611c3781612ab4565b92915050565b600081519050611c4c81612ab4565b92915050565b600082601f830112611c6757611c6661276e565b5b8135611c77848260208601611bb1565b91505092915050565b600081359050611c8f81612acb565b92915050565b600081359050611ca481612ae2565b92915050565b600060208284031215611cc057611cbf61277d565b5b6000611cce84828501611bf3565b91505092915050565b60008060408385031215611cee57611ced61277d565b5b6000611cfc85828601611bf3565b9250506020611d0d85828601611bf3565b9150509250929050565b600080600060608486031215611d3057611d2f61277d565b5b6000611d3e86828701611bf3565b9350506020611d4f86828701611bf3565b9250506040611d6086828701611c80565b9150509250925092565b60008060008060808587031215611d8457611d8361277d565b5b6000611d9287828801611bf3565b9450506020611da387828801611bf3565b9350506040611db487828801611c80565b925050606085013567ffffffffffffffff811115611dd557611dd4612778565b5b611de187828801611c52565b91505092959194509250565b60008060408385031215611e0457611e0361277d565b5b6000611e1285828601611bf3565b9250506020611e2385828601611c13565b9150509250929050565b60008060408385031215611e4457611e4361277d565b5b6000611e5285828601611bf3565b9250506020611e6385828601611c80565b9150509250929050565b600060208284031215611e8357611e8261277d565b5b6000611e9184828501611c28565b91505092915050565b600060208284031215611eb057611eaf61277d565b5b6000611ebe84828501611c3d565b91505092915050565b600060208284031215611edd57611edc61277d565b5b6000611eeb84828501611c80565b91505092915050565b600080600060608486031215611f0d57611f0c61277d565b5b6000611f1b86828701611c80565b9350506020611f2c86828701611bf3565b9250506040611f3d86828701611c95565b9150509250925092565b611f5081612552565b82525050565b611f5f81612564565b82525050565b6000611f7082612485565b611f7a818561249b565b9350611f8a81856020860161261c565b611f9381612782565b840191505092915050565b611fa7816125fb565b82525050565b6000611fb882612490565b611fc281856124ac565b9350611fd281856020860161261c565b611fdb81612782565b840191505092915050565b6000611ff182612490565b611ffb81856124bd565b935061200b81856020860161261c565b80840191505092915050565b6000612024602d836124ac565b915061202f82612793565b604082019050919050565b60006120476032836124ac565b9150612052826127e2565b604082019050919050565b600061206a6025836124ac565b915061207582612831565b604082019050919050565b600061208d6024836124ac565b915061209882612880565b604082019050919050565b60006120b06019836124ac565b91506120bb826128cf565b602082019050919050565b60006120d36029836124ac565b91506120de826128f8565b604082019050919050565b60006120f66018836124ac565b915061210182612947565b602082019050919050565b60006121196021836124ac565b915061212482612970565b604082019050919050565b600061213c603d836124ac565b9150612147826129bf565b604082019050919050565b600061215f6031836124ac565b915061216a82612a0e565b604082019050919050565b60006121826010836124ac565b915061218d82612a5d565b602082019050919050565b6121a1816125dd565b82525050565b6121b0816125e7565b82525050565b60006121c28285611fe6565b91506121ce8284611fe6565b91508190509392505050565b60006020820190506121ef6000830184611f47565b92915050565b600060808201905061220a6000830187611f47565b6122176020830186611f47565b6122246040830185612198565b81810360608301526122368184611f65565b905095945050505050565b60006020820190506122566000830184611f56565b92915050565b60006020820190506122716000830184611f9e565b92915050565b600060208201905081810360008301526122918184611fad565b905092915050565b600060208201905081810360008301526122b281612017565b9050919050565b600060208201905081810360008301526122d28161203a565b9050919050565b600060208201905081810360008301526122f28161205d565b9050919050565b6000602082019050818103600083015261231281612080565b9050919050565b60006020820190508181036000830152612332816120a3565b9050919050565b60006020820190508181036000830152612352816120c6565b9050919050565b60006020820190508181036000830152612372816120e9565b9050919050565b600060208201905081810360008301526123928161210c565b9050919050565b600060208201905081810360008301526123b28161212f565b9050919050565b600060208201905081810360008301526123d281612152565b9050919050565b600060208201905081810360008301526123f281612175565b9050919050565b600060208201905061240e6000830184612198565b92915050565b600060208201905061242960008301846121a7565b92915050565b600061243961244a565b90506124458282612681565b919050565b6000604051905090565b600067ffffffffffffffff82111561246f5761246e61273f565b5b61247882612782565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006124d3826125dd565b91506124de836125dd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612513576125126126b2565b5b828201905092915050565b6000612529826125dd565b9150612534836125dd565b925082821015612547576125466126b2565b5b828203905092915050565b600061255d8261259c565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600074ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b6000612606826125e7565b9050919050565b82818337600083830152505050565b60005b8381101561263a57808201518184015260208101905061261f565b83811115612649576000848401525b50505050565b6000600282049050600182168061266757607f821691505b6020821081141561267b5761267a612710565b5b50919050565b61268a82612782565b810181811067ffffffffffffffff821117156126a9576126a861273f565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b7f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008201527f776e6572206e6f7220617070726f766564000000000000000000000000000000602082015250565b7f7573657220616c72656164792073657400000000000000000000000000000000600082015250565b612a8f816125bc565b8114612a9a57600080fd5b50565b612aa681612564565b8114612ab157600080fd5b50565b612abd81612570565b8114612ac857600080fd5b50565b612ad4816125dd565b8114612adf57600080fd5b50565b612aeb816125e7565b8114612af657600080fd5b5056fea26474726f6e58221220ee24643997cdc4f7c73876049ed2ac59df81a85e9f0c43ecfe4c9d8fbe480e2d64736f6c63430008060033",
  "sourceMap": "165:2903:0:-:0;;;221:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;285:5;292:7;1464:5:6;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;221:98:0;;165:2903;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:17:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:2;;;293:79;;:::i;:::-;262:2;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;;;;;;:::o;448:355::-;515:5;564:3;557:4;549:6;545:17;541:27;531:2;;572:79;;:::i;:::-;531:2;682:6;676:13;707:90;793:3;785:6;778:4;770:6;766:17;707:90;:::i;:::-;698:99;;521:282;;;;;:::o;809:853::-;908:6;916;965:2;953:9;944:7;940:23;936:32;933:2;;;971:79;;:::i;:::-;933:2;1112:1;1101:9;1097:17;1091:24;1142:18;1134:6;1131:30;1128:2;;;1164:79;;:::i;:::-;1128:2;1269:74;1335:7;1326:6;1315:9;1311:22;1269:74;:::i;:::-;1259:84;;1062:291;1413:2;1402:9;1398:18;1392:25;1444:18;1436:6;1433:30;1430:2;;;1466:79;;:::i;:::-;1430:2;1571:74;1637:7;1628:6;1617:9;1613:22;1571:74;:::i;:::-;1561:84;;1363:292;923:739;;;;;:::o;1668:129::-;1702:6;1729:20;;:::i;:::-;1719:30;;1758:33;1786:4;1778:6;1758:33;:::i;:::-;1709:88;;;:::o;1803:75::-;1836:6;1869:2;1863:9;1853:19;;1843:35;:::o;1884:308::-;1946:4;2036:18;2028:6;2025:30;2022:2;;;2058:18;;:::i;:::-;2022:2;2096:29;2118:6;2096:29;:::i;:::-;2088:37;;2180:4;2174;2170:15;2162:23;;1951:241;;;:::o;2198:307::-;2266:1;2276:113;2290:6;2287:1;2284:13;2276:113;;;2375:1;2370:3;2366:11;2360:18;2356:1;2351:3;2347:11;2340:39;2312:2;2309:1;2305:10;2300:15;;2276:113;;;2407:6;2404:1;2401:13;2398:2;;;2487:1;2478:6;2473:3;2469:16;2462:27;2398:2;2247:258;;;;:::o;2511:320::-;2555:6;2592:1;2586:4;2582:12;2572:22;;2639:1;2633:4;2629:12;2660:18;2650:2;;2716:4;2708:6;2704:17;2694:27;;2650:2;2778;2770:6;2767:14;2747:18;2744:38;2741:2;;;2797:18;;:::i;:::-;2741:2;2562:269;;;;:::o;2837:281::-;2920:27;2942:4;2920:27;:::i;:::-;2912:6;2908:40;3050:6;3038:10;3035:22;3014:18;3002:10;2999:34;2996:62;2993:2;;;3061:18;;:::i;:::-;2993:2;3101:10;3097:2;3090:22;2880:238;;;:::o;3124:180::-;3172:77;3169:1;3162:88;3269:4;3266:1;3259:15;3293:4;3290:1;3283:15;3310:180;3358:77;3355:1;3348:88;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3496:117;3605:1;3602;3595:12;3619:117;3728:1;3725;3718:12;3742:117;3851:1;3848;3841:12;3865:117;3974:1;3971;3964:12;3988:102;4029:6;4080:2;4076:7;4071:2;4064:5;4060:14;4056:28;4046:38;;4036:54;;;:::o;165:2903:0:-;;;;;;;",
  "deployedSourceMap": "165:2903:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5004:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2102:184:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5249:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1563:315:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;482:608:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;806:508:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4388:162:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2343:270:0;2494:4;2539:26;2524:41;;;:11;:41;;;;:81;;;;2569:36;2593:11;2569:23;:36::i;:::-;2524:81;2517:88;;2343:270;;;:::o;2471:98:6:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;4820:12;:10;:12::i;:::-;4834:7;4801:18;:41::i;:::-;4793:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;:::-;4612:326;;;:::o;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;:::-;5004:179;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2102:184:0:-;2223:7;2255:6;:15;2262:7;2255:15;;;;;;;;;;;:23;;;;;;;;;;;;2248:30;;;;2102:184;;;:::o;2633:102:6:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;5436:12;:10;:12::i;:::-;5450:7;5417:18;:41::i;:::-;5409:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;1563:315:0:-;1684:7;1750:15;1722:6;:15;1729:7;1722:15;;;;;;;;;;;:23;;;;;;;;;;;;1714:32;;:51;1710:161;;1789:6;:15;1796:7;1789:15;;;;;;;;;;;:20;;;;;;;;;;;;1782:27;;;;1710:161;1857:1;1842:17;;1563:315;;;;:::o;482:608:9:-;555:13;580:23;595:7;580:14;:23::i;:::-;614;640:10;:19;651:7;640:19;;;;;;;;;;;614:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;669:18;690:10;:8;:10::i;:::-;669:31;;795:1;779:4;773:18;:23;769:70;;;819:9;812:16;;;;;;769:70;967:1;947:9;941:23;:27;937:106;;;1015:4;1021:9;998:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;984:48;;;;;;937:106;1060:23;1075:7;1060:14;:23::i;:::-;1053:30;;;;482:608;;;;:::o;806:508:0:-;939:21;963:6;:15;970:7;963:15;;;;;;;;;;;939:39;;1011;1030:10;1042:7;1011:18;:39::i;:::-;989:138;;;;;;;;;;;;:::i;:::-;;;;;;;;;1173:1;1146:29;;:15;1153:7;1146:6;:15::i;:::-;:29;;;1138:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;1219:4;1207;:9;;;:16;;;;;;;;;;;;;;;;;;1249:7;1234:4;:12;;;:22;;;;;;;;;;;;;;;;;;1292:4;1272:34;;1283:7;1272:34;1298:7;1272:34;;;;;;:::i;:::-;;;;;;;;928:386;806:508;;;:::o;4388:162:6:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;1570:300::-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;13466:133::-;13547:16;13555:7;13547;:16::i;:::-;13539:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13466:133;:::o;640:96:12:-;693:7;719:10;712:17;;640:96;:::o;12768:171:6:-;12869:2;12842:15;:24;12858:7;12842:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12924:7;12920:2;12886:46;;12895:23;12910:7;12895:14;:23::i;:::-;12886:46;;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;7706:16;;:7;:16;;;:52;;;;7726:32;7743:5;7750:7;7726:16;:32::i;:::-;7706:52;:87;;;;7786:7;7762:31;;:20;7774:7;7762:11;:20::i;:::-;:31;;;7706:87;7698:96;;;7540:261;;;;:::o;11423:1233::-;11577:4;11550:31;;:23;11565:7;11550:14;:23::i;:::-;:31;;;11542:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11655:1;11641:16;;:2;:16;;;;11633:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;11851:31;;:23;11866:7;11851:14;:23::i;:::-;:31;;;11843:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11993:15;:24;12009:7;11993:24;;;;;;;;;;;;11986:31;;;;;;;;;;;12480:1;12461:9;:15;12471:4;12461:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12512:1;12495:9;:13;12505:2;12495:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12552:2;12533:7;:16;12541:7;12533:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12589:7;12585:2;12570:27;;12579:4;12570:27;;;;;;;;;;;;12608:41;12628:4;12634:2;12638:7;12647:1;12608:19;:41::i;:::-;11423:1233;;;:::o;6838:115::-;6904:7;6930;:16;6938:7;6930:16;;;;;;;;;;;;;;;;;;;;;6923:23;;6838:115;;;:::o;13075:307::-;13225:8;13216:17;;:5;:17;;;;13208:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13311:8;13273:18;:25;13292:5;13273:25;;;;;;;;;;;;;;;:35;13299:8;13273:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13356:8;13334:41;;13349:5;13334:41;;;13366:8;13334:41;;;;;;:::i;:::-;;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6424:305;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;829:155:14:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7256:126:6:-;7321:4;7373:1;7344:31;;:17;7353:7;7344:8;:17::i;:::-;:31;;;;7337:38;;7256:126;;;:::o;2682:383:0:-;2840:48;2867:4;2873:2;2877:7;2886:1;2840:26;:48::i;:::-;2913:2;2905:10;;:4;:10;;;;:48;;;;;2951:1;2919:34;;:6;:15;2926:7;2919:15;;;;;;;;;;;:20;;;;;;;;;;;;:34;;;;2905:48;2901:157;;;2977:6;:15;2984:7;2977:15;;;;;;;;;;;;2970:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3040:1;3012:34;;3023:7;3012:34;3044:1;3012:34;;;;;;:::i;:::-;;;;;;;;2901:157;2682:383;;;;:::o;16803:153:6:-;;;;;:::o;14151:834::-;14300:4;14337:1;14320:2;:14;;;:18;14316:663;;;14374:2;14358:36;;;14395:12;:10;:12::i;:::-;14409:4;14415:7;14424:4;14358:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14354:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14613:1;14596:6;:13;:18;14592:321;;;14638:60;;;;;;;;;;:::i;:::-;;;;;;;;14592:321;14865:6;14859:13;14850:6;14846:2;14842:15;14835:38;14354:573;14489:41;;;14479:51;;;:6;:51;;;;14472:58;;;;;14316:663;14964:4;14957:11;;14151:834;;;;;;;:::o;415:696:13:-;471:13;520:14;557:1;537:17;548:5;537:10;:17::i;:::-;:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;572:41;;627:11;753:6;749:2;745:15;737:6;733:28;726:35;;788:280;795:4;788:280;;;819:5;;;;;;;;958:8;953:2;946:5;942:14;937:30;932:3;924:44;1012:2;1003:11;;;;;;:::i;:::-;;;;;1045:1;1036:5;:10;1032:21;;;1048:5;;1032:21;788:280;;;1088:6;1081:13;;;;;415:696;;;:::o;15701:396:6:-;15885:1;15873:9;:13;15869:222;;;15922:1;15906:18;;:4;:18;;;15902:85;;15963:9;15944;:15;15954:4;15944:15;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;15902:85;16018:1;16004:16;;:2;:16;;;16000:81;;16057:9;16040;:13;16050:2;16040:13;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;16000:81;15869:222;15701:396;;;;:::o;9889:890:16:-;9942:7;9961:14;9978:1;9961:18;;10026:6;10017:5;:15;10013:99;;10061:6;10052:15;;;;;;:::i;:::-;;;;;10095:2;10085:12;;;;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;;;;:::i;:::-;;;;;10207:2;10197:12;;;;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;;;;:::i;:::-;;;;;10319:2;10309:12;;;;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;;;;:::i;:::-;;;;;10429:1;10419:11;;;;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;;;;:::i;:::-;;;;;10538:1;10528:11;;;;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;;;;:::i;:::-;;;;;10647:1;10637:11;;;;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;;;;10676:64;10766:6;10759:13;;;9889:890;;;:::o;7:410:17:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;280:79;;:::i;:::-;249:2;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;;;;;;:::o;423:181::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;574:24;592:5;574:24;:::i;:::-;565:33;;475:129;;;;:::o;610:133::-;653:5;691:6;678:20;669:29;;707:30;731:5;707:30;:::i;:::-;659:84;;;;:::o;749:137::-;794:5;832:6;819:20;810:29;;848:32;874:5;848:32;:::i;:::-;800:86;;;;:::o;892:141::-;948:5;979:6;973:13;964:22;;995:32;1021:5;995:32;:::i;:::-;954:79;;;;:::o;1052:338::-;1107:5;1156:3;1149:4;1141:6;1137:17;1133:27;1123:2;;1164:79;;:::i;:::-;1123:2;1281:6;1268:20;1306:78;1380:3;1372:6;1365:4;1357:6;1353:17;1306:78;:::i;:::-;1297:87;;1113:277;;;;;:::o;1396:139::-;1442:5;1480:6;1467:20;1458:29;;1496:33;1523:5;1496:33;:::i;:::-;1448:87;;;;:::o;1541:137::-;1586:5;1624:6;1611:20;1602:29;;1640:32;1666:5;1640:32;:::i;:::-;1592:86;;;;:::o;1684:329::-;1743:6;1792:2;1780:9;1771:7;1767:23;1763:32;1760:2;;;1798:79;;:::i;:::-;1760:2;1918:1;1943:53;1988:7;1979:6;1968:9;1964:22;1943:53;:::i;:::-;1933:63;;1889:117;1750:263;;;;:::o;2019:474::-;2087:6;2095;2144:2;2132:9;2123:7;2119:23;2115:32;2112:2;;;2150:79;;:::i;:::-;2112:2;2270:1;2295:53;2340:7;2331:6;2320:9;2316:22;2295:53;:::i;:::-;2285:63;;2241:117;2397:2;2423:53;2468:7;2459:6;2448:9;2444:22;2423:53;:::i;:::-;2413:63;;2368:118;2102:391;;;;;:::o;2499:619::-;2576:6;2584;2592;2641:2;2629:9;2620:7;2616:23;2612:32;2609:2;;;2647:79;;:::i;:::-;2609:2;2767:1;2792:53;2837:7;2828:6;2817:9;2813:22;2792:53;:::i;:::-;2782:63;;2738:117;2894:2;2920:53;2965:7;2956:6;2945:9;2941:22;2920:53;:::i;:::-;2910:63;;2865:118;3022:2;3048:53;3093:7;3084:6;3073:9;3069:22;3048:53;:::i;:::-;3038:63;;2993:118;2599:519;;;;;:::o;3124:943::-;3219:6;3227;3235;3243;3292:3;3280:9;3271:7;3267:23;3263:33;3260:2;;;3299:79;;:::i;:::-;3260:2;3419:1;3444:53;3489:7;3480:6;3469:9;3465:22;3444:53;:::i;:::-;3434:63;;3390:117;3546:2;3572:53;3617:7;3608:6;3597:9;3593:22;3572:53;:::i;:::-;3562:63;;3517:118;3674:2;3700:53;3745:7;3736:6;3725:9;3721:22;3700:53;:::i;:::-;3690:63;;3645:118;3830:2;3819:9;3815:18;3802:32;3861:18;3853:6;3850:30;3847:2;;;3883:79;;:::i;:::-;3847:2;3988:62;4042:7;4033:6;4022:9;4018:22;3988:62;:::i;:::-;3978:72;;3773:287;3250:817;;;;;;;:::o;4073:468::-;4138:6;4146;4195:2;4183:9;4174:7;4170:23;4166:32;4163:2;;;4201:79;;:::i;:::-;4163:2;4321:1;4346:53;4391:7;4382:6;4371:9;4367:22;4346:53;:::i;:::-;4336:63;;4292:117;4448:2;4474:50;4516:7;4507:6;4496:9;4492:22;4474:50;:::i;:::-;4464:60;;4419:115;4153:388;;;;;:::o;4547:474::-;4615:6;4623;4672:2;4660:9;4651:7;4647:23;4643:32;4640:2;;;4678:79;;:::i;:::-;4640:2;4798:1;4823:53;4868:7;4859:6;4848:9;4844:22;4823:53;:::i;:::-;4813:63;;4769:117;4925:2;4951:53;4996:7;4987:6;4976:9;4972:22;4951:53;:::i;:::-;4941:63;;4896:118;4630:391;;;;;:::o;5027:327::-;5085:6;5134:2;5122:9;5113:7;5109:23;5105:32;5102:2;;;5140:79;;:::i;:::-;5102:2;5260:1;5285:52;5329:7;5320:6;5309:9;5305:22;5285:52;:::i;:::-;5275:62;;5231:116;5092:262;;;;:::o;5360:349::-;5429:6;5478:2;5466:9;5457:7;5453:23;5449:32;5446:2;;;5484:79;;:::i;:::-;5446:2;5604:1;5629:63;5684:7;5675:6;5664:9;5660:22;5629:63;:::i;:::-;5619:73;;5575:127;5436:273;;;;:::o;5715:329::-;5774:6;5823:2;5811:9;5802:7;5798:23;5794:32;5791:2;;;5829:79;;:::i;:::-;5791:2;5949:1;5974:53;6019:7;6010:6;5999:9;5995:22;5974:53;:::i;:::-;5964:63;;5920:117;5781:263;;;;:::o;6050:617::-;6126:6;6134;6142;6191:2;6179:9;6170:7;6166:23;6162:32;6159:2;;;6197:79;;:::i;:::-;6159:2;6317:1;6342:53;6387:7;6378:6;6367:9;6363:22;6342:53;:::i;:::-;6332:63;;6288:117;6444:2;6470:53;6515:7;6506:6;6495:9;6491:22;6470:53;:::i;:::-;6460:63;;6415:118;6572:2;6598:52;6642:7;6633:6;6622:9;6618:22;6598:52;:::i;:::-;6588:62;;6543:117;6149:518;;;;;:::o;6673:118::-;6760:24;6778:5;6760:24;:::i;:::-;6755:3;6748:37;6738:53;;:::o;6797:109::-;6878:21;6893:5;6878:21;:::i;:::-;6873:3;6866:34;6856:50;;:::o;6912:360::-;6998:3;7026:38;7058:5;7026:38;:::i;:::-;7080:70;7143:6;7138:3;7080:70;:::i;:::-;7073:77;;7159:52;7204:6;7199:3;7192:4;7185:5;7181:16;7159:52;:::i;:::-;7236:29;7258:6;7236:29;:::i;:::-;7231:3;7227:39;7220:46;;7002:270;;;;;:::o;7278:145::-;7372:44;7410:5;7372:44;:::i;:::-;7367:3;7360:57;7350:73;;:::o;7429:364::-;7517:3;7545:39;7578:5;7545:39;:::i;:::-;7600:71;7664:6;7659:3;7600:71;:::i;:::-;7593:78;;7680:52;7725:6;7720:3;7713:4;7706:5;7702:16;7680:52;:::i;:::-;7757:29;7779:6;7757:29;:::i;:::-;7752:3;7748:39;7741:46;;7521:272;;;;;:::o;7799:377::-;7905:3;7933:39;7966:5;7933:39;:::i;:::-;7988:89;8070:6;8065:3;7988:89;:::i;:::-;7981:96;;8086:52;8131:6;8126:3;8119:4;8112:5;8108:16;8086:52;:::i;:::-;8163:6;8158:3;8154:16;8147:23;;7909:267;;;;;:::o;8182:366::-;8324:3;8345:67;8409:2;8404:3;8345:67;:::i;:::-;8338:74;;8421:93;8510:3;8421:93;:::i;:::-;8539:2;8534:3;8530:12;8523:19;;8328:220;;;:::o;8554:366::-;8696:3;8717:67;8781:2;8776:3;8717:67;:::i;:::-;8710:74;;8793:93;8882:3;8793:93;:::i;:::-;8911:2;8906:3;8902:12;8895:19;;8700:220;;;:::o;8926:366::-;9068:3;9089:67;9153:2;9148:3;9089:67;:::i;:::-;9082:74;;9165:93;9254:3;9165:93;:::i;:::-;9283:2;9278:3;9274:12;9267:19;;9072:220;;;:::o;9298:366::-;9440:3;9461:67;9525:2;9520:3;9461:67;:::i;:::-;9454:74;;9537:93;9626:3;9537:93;:::i;:::-;9655:2;9650:3;9646:12;9639:19;;9444:220;;;:::o;9670:366::-;9812:3;9833:67;9897:2;9892:3;9833:67;:::i;:::-;9826:74;;9909:93;9998:3;9909:93;:::i;:::-;10027:2;10022:3;10018:12;10011:19;;9816:220;;;:::o;10042:366::-;10184:3;10205:67;10269:2;10264:3;10205:67;:::i;:::-;10198:74;;10281:93;10370:3;10281:93;:::i;:::-;10399:2;10394:3;10390:12;10383:19;;10188:220;;;:::o;10414:366::-;10556:3;10577:67;10641:2;10636:3;10577:67;:::i;:::-;10570:74;;10653:93;10742:3;10653:93;:::i;:::-;10771:2;10766:3;10762:12;10755:19;;10560:220;;;:::o;10786:366::-;10928:3;10949:67;11013:2;11008:3;10949:67;:::i;:::-;10942:74;;11025:93;11114:3;11025:93;:::i;:::-;11143:2;11138:3;11134:12;11127:19;;10932:220;;;:::o;11158:366::-;11300:3;11321:67;11385:2;11380:3;11321:67;:::i;:::-;11314:74;;11397:93;11486:3;11397:93;:::i;:::-;11515:2;11510:3;11506:12;11499:19;;11304:220;;;:::o;11530:366::-;11672:3;11693:67;11757:2;11752:3;11693:67;:::i;:::-;11686:74;;11769:93;11858:3;11769:93;:::i;:::-;11887:2;11882:3;11878:12;11871:19;;11676:220;;;:::o;11902:366::-;12044:3;12065:67;12129:2;12124:3;12065:67;:::i;:::-;12058:74;;12141:93;12230:3;12141:93;:::i;:::-;12259:2;12254:3;12250:12;12243:19;;12048:220;;;:::o;12274:118::-;12361:24;12379:5;12361:24;:::i;:::-;12356:3;12349:37;12339:53;;:::o;12398:115::-;12483:23;12500:5;12483:23;:::i;:::-;12478:3;12471:36;12461:52;;:::o;12519:435::-;12699:3;12721:95;12812:3;12803:6;12721:95;:::i;:::-;12714:102;;12833:95;12924:3;12915:6;12833:95;:::i;:::-;12826:102;;12945:3;12938:10;;12703:251;;;;;:::o;12960:222::-;13053:4;13091:2;13080:9;13076:18;13068:26;;13104:71;13172:1;13161:9;13157:17;13148:6;13104:71;:::i;:::-;13058:124;;;;:::o;13188:640::-;13383:4;13421:3;13410:9;13406:19;13398:27;;13435:71;13503:1;13492:9;13488:17;13479:6;13435:71;:::i;:::-;13516:72;13584:2;13573:9;13569:18;13560:6;13516:72;:::i;:::-;13598;13666:2;13655:9;13651:18;13642:6;13598:72;:::i;:::-;13717:9;13711:4;13707:20;13702:2;13691:9;13687:18;13680:48;13745:76;13816:4;13807:6;13745:76;:::i;:::-;13737:84;;13388:440;;;;;;;:::o;13834:210::-;13921:4;13959:2;13948:9;13944:18;13936:26;;13972:65;14034:1;14023:9;14019:17;14010:6;13972:65;:::i;:::-;13926:118;;;;:::o;14050:236::-;14150:4;14188:2;14177:9;14173:18;14165:26;;14201:78;14276:1;14265:9;14261:17;14252:6;14201:78;:::i;:::-;14155:131;;;;:::o;14292:313::-;14405:4;14443:2;14432:9;14428:18;14420:26;;14492:9;14486:4;14482:20;14478:1;14467:9;14463:17;14456:47;14520:78;14593:4;14584:6;14520:78;:::i;:::-;14512:86;;14410:195;;;;:::o;14611:419::-;14777:4;14815:2;14804:9;14800:18;14792:26;;14864:9;14858:4;14854:20;14850:1;14839:9;14835:17;14828:47;14892:131;15018:4;14892:131;:::i;:::-;14884:139;;14782:248;;;:::o;15036:419::-;15202:4;15240:2;15229:9;15225:18;15217:26;;15289:9;15283:4;15279:20;15275:1;15264:9;15260:17;15253:47;15317:131;15443:4;15317:131;:::i;:::-;15309:139;;15207:248;;;:::o;15461:419::-;15627:4;15665:2;15654:9;15650:18;15642:26;;15714:9;15708:4;15704:20;15700:1;15689:9;15685:17;15678:47;15742:131;15868:4;15742:131;:::i;:::-;15734:139;;15632:248;;;:::o;15886:419::-;16052:4;16090:2;16079:9;16075:18;16067:26;;16139:9;16133:4;16129:20;16125:1;16114:9;16110:17;16103:47;16167:131;16293:4;16167:131;:::i;:::-;16159:139;;16057:248;;;:::o;16311:419::-;16477:4;16515:2;16504:9;16500:18;16492:26;;16564:9;16558:4;16554:20;16550:1;16539:9;16535:17;16528:47;16592:131;16718:4;16592:131;:::i;:::-;16584:139;;16482:248;;;:::o;16736:419::-;16902:4;16940:2;16929:9;16925:18;16917:26;;16989:9;16983:4;16979:20;16975:1;16964:9;16960:17;16953:47;17017:131;17143:4;17017:131;:::i;:::-;17009:139;;16907:248;;;:::o;17161:419::-;17327:4;17365:2;17354:9;17350:18;17342:26;;17414:9;17408:4;17404:20;17400:1;17389:9;17385:17;17378:47;17442:131;17568:4;17442:131;:::i;:::-;17434:139;;17332:248;;;:::o;17586:419::-;17752:4;17790:2;17779:9;17775:18;17767:26;;17839:9;17833:4;17829:20;17825:1;17814:9;17810:17;17803:47;17867:131;17993:4;17867:131;:::i;:::-;17859:139;;17757:248;;;:::o;18011:419::-;18177:4;18215:2;18204:9;18200:18;18192:26;;18264:9;18258:4;18254:20;18250:1;18239:9;18235:17;18228:47;18292:131;18418:4;18292:131;:::i;:::-;18284:139;;18182:248;;;:::o;18436:419::-;18602:4;18640:2;18629:9;18625:18;18617:26;;18689:9;18683:4;18679:20;18675:1;18664:9;18660:17;18653:47;18717:131;18843:4;18717:131;:::i;:::-;18709:139;;18607:248;;;:::o;18861:419::-;19027:4;19065:2;19054:9;19050:18;19042:26;;19114:9;19108:4;19104:20;19100:1;19089:9;19085:17;19078:47;19142:131;19268:4;19142:131;:::i;:::-;19134:139;;19032:248;;;:::o;19286:222::-;19379:4;19417:2;19406:9;19402:18;19394:26;;19430:71;19498:1;19487:9;19483:17;19474:6;19430:71;:::i;:::-;19384:124;;;;:::o;19514:218::-;19605:4;19643:2;19632:9;19628:18;19620:26;;19656:69;19722:1;19711:9;19707:17;19698:6;19656:69;:::i;:::-;19610:122;;;;:::o;19738:129::-;19772:6;19799:20;;:::i;:::-;19789:30;;19828:33;19856:4;19848:6;19828:33;:::i;:::-;19779:88;;;:::o;19873:75::-;19906:6;19939:2;19933:9;19923:19;;19913:35;:::o;19954:307::-;20015:4;20105:18;20097:6;20094:30;20091:2;;;20127:18;;:::i;:::-;20091:2;20165:29;20187:6;20165:29;:::i;:::-;20157:37;;20249:4;20243;20239:15;20231:23;;20020:241;;;:::o;20267:98::-;20318:6;20352:5;20346:12;20336:22;;20325:40;;;:::o;20371:99::-;20423:6;20457:5;20451:12;20441:22;;20430:40;;;:::o;20476:168::-;20559:11;20593:6;20588:3;20581:19;20633:4;20628:3;20624:14;20609:29;;20571:73;;;;:::o;20650:169::-;20734:11;20768:6;20763:3;20756:19;20808:4;20803:3;20799:14;20784:29;;20746:73;;;;:::o;20825:148::-;20927:11;20964:3;20949:18;;20939:34;;;;:::o;20979:305::-;21019:3;21038:20;21056:1;21038:20;:::i;:::-;21033:25;;21072:20;21090:1;21072:20;:::i;:::-;21067:25;;21226:1;21158:66;21154:74;21151:1;21148:81;21145:2;;;21232:18;;:::i;:::-;21145:2;21276:1;21273;21269:9;21262:16;;21023:261;;;;:::o;21290:191::-;21330:4;21350:20;21368:1;21350:20;:::i;:::-;21345:25;;21384:20;21402:1;21384:20;:::i;:::-;21379:25;;21423:1;21420;21417:8;21414:2;;;21428:18;;:::i;:::-;21414:2;21473:1;21470;21466:9;21458:17;;21335:146;;;;:::o;21487:96::-;21524:7;21553:24;21571:5;21553:24;:::i;:::-;21542:35;;21532:51;;;:::o;21589:90::-;21623:7;21666:5;21659:13;21652:21;21641:32;;21631:48;;;:::o;21685:149::-;21721:7;21761:66;21754:5;21750:78;21739:89;;21729:105;;;:::o;21840:126::-;21877:7;21917:42;21910:5;21906:54;21895:65;;21885:81;;;:::o;21972:128::-;22009:7;22049:44;22042:5;22038:56;22027:67;;22017:83;;;:::o;22106:77::-;22143:7;22172:5;22161:16;;22151:32;;;:::o;22189:101::-;22225:7;22265:18;22258:5;22254:30;22243:41;;22233:57;;;:::o;22296:119::-;22353:9;22386:23;22403:5;22386:23;:::i;:::-;22373:36;;22363:52;;;:::o;22421:154::-;22505:6;22500:3;22495;22482:30;22567:1;22558:6;22553:3;22549:16;22542:27;22472:103;;;:::o;22581:307::-;22649:1;22659:113;22673:6;22670:1;22667:13;22659:113;;;22758:1;22753:3;22749:11;22743:18;22739:1;22734:3;22730:11;22723:39;22695:2;22692:1;22688:10;22683:15;;22659:113;;;22790:6;22787:1;22784:13;22781:2;;;22870:1;22861:6;22856:3;22852:16;22845:27;22781:2;22630:258;;;;:::o;22894:320::-;22938:6;22975:1;22969:4;22965:12;22955:22;;23022:1;23016:4;23012:12;23043:18;23033:2;;23099:4;23091:6;23087:17;23077:27;;23033:2;23161;23153:6;23150:14;23130:18;23127:38;23124:2;;;23180:18;;:::i;:::-;23124:2;22945:269;;;;:::o;23220:281::-;23303:27;23325:4;23303:27;:::i;:::-;23295:6;23291:40;23433:6;23421:10;23418:22;23397:18;23385:10;23382:34;23379:62;23376:2;;;23444:18;;:::i;:::-;23376:2;23484:10;23480:2;23473:22;23263:238;;;:::o;23507:180::-;23555:77;23552:1;23545:88;23652:4;23649:1;23642:15;23676:4;23673:1;23666:15;23693:180;23741:77;23738:1;23731:88;23838:4;23835:1;23828:15;23862:4;23859:1;23852:15;23879:180;23927:77;23924:1;23917:88;24024:4;24021:1;24014:15;24048:4;24045:1;24038:15;24065:180;24113:77;24110:1;24103:88;24210:4;24207:1;24200:15;24234:4;24231:1;24224:15;24251:117;24360:1;24357;24350:12;24374:117;24483:1;24480;24473:12;24497:117;24606:1;24603;24596:12;24620:117;24729:1;24726;24719:12;24743:102;24784:6;24835:2;24831:7;24826:2;24819:5;24815:14;24811:28;24801:38;;24791:54;;;:::o;24851:232::-;24991:34;24987:1;24979:6;24975:14;24968:58;25060:15;25055:2;25047:6;25043:15;25036:40;24957:126;:::o;25089:237::-;25229:34;25225:1;25217:6;25213:14;25206:58;25298:20;25293:2;25285:6;25281:15;25274:45;25195:131;:::o;25332:224::-;25472:34;25468:1;25460:6;25456:14;25449:58;25541:7;25536:2;25528:6;25524:15;25517:32;25438:118;:::o;25562:223::-;25702:34;25698:1;25690:6;25686:14;25679:58;25771:6;25766:2;25758:6;25754:15;25747:31;25668:117;:::o;25791:175::-;25931:27;25927:1;25919:6;25915:14;25908:51;25897:69;:::o;25972:228::-;26112:34;26108:1;26100:6;26096:14;26089:58;26181:11;26176:2;26168:6;26164:15;26157:36;26078:122;:::o;26206:174::-;26346:26;26342:1;26334:6;26330:14;26323:50;26312:68;:::o;26386:220::-;26526:34;26522:1;26514:6;26510:14;26503:58;26595:3;26590:2;26582:6;26578:15;26571:28;26492:114;:::o;26612:248::-;26752:34;26748:1;26740:6;26736:14;26729:58;26821:31;26816:2;26808:6;26804:15;26797:56;26718:142;:::o;26866:236::-;27006:34;27002:1;26994:6;26990:14;26983:58;27075:19;27070:2;27062:6;27058:15;27051:44;26972:130;:::o;27108:166::-;27248:18;27244:1;27236:6;27232:14;27225:42;27214:60;:::o;27280:122::-;27353:24;27371:5;27353:24;:::i;:::-;27346:5;27343:35;27333:2;;27392:1;27389;27382:12;27333:2;27323:79;:::o;27408:116::-;27478:21;27493:5;27478:21;:::i;:::-;27471:5;27468:32;27458:2;;27514:1;27511;27504:12;27458:2;27448:76;:::o;27530:120::-;27602:23;27619:5;27602:23;:::i;:::-;27595:5;27592:34;27582:2;;27640:1;27637;27630:12;27582:2;27572:78;:::o;27656:122::-;27729:24;27747:5;27729:24;:::i;:::-;27722:5;27719:35;27709:2;;27768:1;27765;27758:12;27709:2;27699:79;:::o;27784:120::-;27856:23;27873:5;27856:23;:::i;:::-;27849:5;27846:34;27836:2;;27894:1;27891;27884:12;27836:2;27826:78;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"./IERC4907.sol\";\r\n\r\ncontract ERC4907 is ERC721URIStorage, IERC4907 {\r\n\r\n    constructor (string memory _name, string memory _symbol) ERC721(_name, _symbol) {\r\n        \r\n    }\r\n\r\n    struct UserInfo {\r\n        address user; // address of user role\r\n        uint64 expires; // unix timestamp, user expires\r\n    }\r\n\r\n    mapping(uint256 => UserInfo) internal _users;\r\n\r\n\r\n    /// @notice set the user and expires of a NFT\r\n    /// @dev The zero address indicates there is no user\r\n    /// Throws if `tokenId` is not valid NFT\r\n    /// @param user  The new user of the NFT\r\n    /// @param expires  UNIX timestamp, The new user could use the NFT before expires\r\n    function setUser(\r\n        uint256 tokenId,\r\n        address user,\r\n        uint64 expires\r\n    ) override public virtual {\r\n        UserInfo storage info = _users[tokenId];\r\n        require(\r\n            _isApprovedOrOwner(msg.sender, tokenId),\r\n            \"ERC721: transfer caller is not owner nor approved\"\r\n        );\r\n        require(userOf(tokenId) == address(0), \"user already set\");\r\n        info.user = user;\r\n        info.expires = expires;\r\n        emit UpdateUser(tokenId, user, expires);\r\n    }\r\n\r\n    /// @notice Get the user address of an NFT\r\n    /// @dev The zero address indicates that there is no user or the user is expired\r\n    /// @param tokenId The NFT to get the user address for\r\n    /// @return The user address for this NFT\r\n    function userOf(uint256 tokenId) \r\n        override \r\n        public \r\n        view \r\n        virtual \r\n        returns (address) \r\n    {\r\n        if (uint256(_users[tokenId].expires) >= block.timestamp) {\r\n            return _users[tokenId].user;\r\n        } else {\r\n            return address(0);\r\n        }\r\n    }\r\n\r\n    /// @notice Get the user expires of an NFT\r\n    /// @dev The zero value indicates that there is no user\r\n    /// @param tokenId The NFT to get the user expires for\r\n    /// @return The user expires for this NFT\r\n    function userExpires(uint256 tokenId)\r\n        override\r\n        public\r\n        view\r\n        virtual\r\n        returns (uint256)\r\n    {\r\n        return _users[tokenId].expires;\r\n    }\r\n\r\n\r\n    /// @dev See {IERC165-supportsInterface}.\r\n    function supportsInterface(bytes4 interfaceId) \r\n        public \r\n        view \r\n        virtual \r\n        override(ERC721, IERC165)\r\n        returns (bool) \r\n    {\r\n        return interfaceId == type(IERC4907).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /// @dev Hook that is called before any token transfer.\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 tokenId,\r\n        uint\r\n    ) internal virtual override{\r\n        super._beforeTokenTransfer(from, to, tokenId, 1);\r\n\r\n        if (from != to && _users[tokenId].user != address(0)) {\r\n            delete _users[tokenId];\r\n            emit UpdateUser(tokenId, address(0), 0);\r\n        }\r\n    }\r\n}",
  "sourcePath": "C:/Users/maxek/Desktop/Sergeich/contracts/EIPs/ERC4907.sol",
  "ast": {
    "absolutePath": "/C/Users/maxek/Desktop/Sergeich/contracts/EIPs/ERC4907.sol",
    "exportedSymbols": {
      "Address": [
        2076
      ],
      "Context": [
        2098
      ],
      "ERC165": [
        2297
      ],
      "ERC4907": [
        212
      ],
      "ERC721": [
        1460
      ],
      "ERC721URIStorage": [
        1719
      ],
      "IERC165": [
        2309
      ],
      "IERC4907": [
        256
      ],
      "IERC721": [
        1576
      ],
      "IERC721Metadata": [
        1746
      ],
      "IERC721Receiver": [
        1594
      ],
      "Math": [
        3174
      ],
      "Strings": [
        2273
      ]
    },
    "id": 213,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:20:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 1720,
        "src": "57:78:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/maxek/Desktop/Sergeich/contracts/EIPs/IERC4907.sol",
        "file": "./IERC4907.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 257,
        "src": "137:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1719,
              "src": "185:16:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "185:16:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "IERC4907",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 256,
              "src": "203:8:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "203:8:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 212,
        "linearizedBaseContracts": [
          212,
          256,
          1719,
          1460,
          1746,
          1576,
          2297,
          2309,
          2098
        ],
        "name": "ERC4907",
        "nameLocation": "174:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "301:18:0",
              "statements": []
            },
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "285:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 15,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "292:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 16,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1460,
                  "src": "278:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "278:22:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "248:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "234:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "269:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "255:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "233:44:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:0"
            },
            "scope": 212,
            "src": "221:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "ERC4907.UserInfo",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "362:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "354:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 20,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "354:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "expires",
                "nameLocation": "408:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "401:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "401:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nameLocation": "334:8:0",
            "nodeType": "StructDefinition",
            "scope": 212,
            "src": "327:128:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "_users",
            "nameLocation": "501:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 212,
            "src": "463:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
              "typeString": "mapping(uint256 => struct ERC4907.UserInfo)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "471:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "463:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                "typeString": "mapping(uint256 => struct ERC4907.UserInfo)"
              },
              "valueType": {
                "id": 27,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26,
                  "name": "UserInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "482:8:0"
                },
                "referencedDeclaration": 24,
                "src": "482:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                  "typeString": "struct ERC4907.UserInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              239
            ],
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "928:386:0",
              "statements": [
                {
                  "assignments": [
                    42
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "956:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 86,
                      "src": "939:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                        "typeString": "struct ERC4907.UserInfo"
                      },
                      "typeName": {
                        "id": 41,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "939:8:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "939:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                          "typeString": "struct ERC4907.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46,
                  "initialValue": {
                    "baseExpression": {
                      "id": 43,
                      "name": "_users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "963:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                        "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                      }
                    },
                    "id": 45,
                    "indexExpression": {
                      "id": 44,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "970:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "963:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                      "typeString": "struct ERC4907.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "939:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 49,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1030:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1030:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 51,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1042:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 48,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "1011:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1011:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1065:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "989:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:138:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "989:138:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 58,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1153:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 57,
                            "name": "userOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "1146:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1146:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1173:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1165:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 60,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1165:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1165:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1146:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7573657220616c726561647920736574",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1177:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd834107cc09e26268f1681b4972543a58280d25a912b2d16ddb9c47ffa5d074",
                          "typeString": "literal_string \"user already set\""
                        },
                        "value": "user already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd834107cc09e26268f1681b4972543a58280d25a912b2d16ddb9c47ffa5d074",
                          "typeString": "literal_string \"user already set\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1138:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1138:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:58:0"
                },
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 68,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1207:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                          "typeString": "struct ERC4907.UserInfo storage pointer"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "user",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1207:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1219:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1207:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1207:16:0"
                },
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 74,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1234:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                          "typeString": "struct ERC4907.UserInfo storage pointer"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expires",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "1234:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77,
                      "name": "expires",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1249:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1234:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 81,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1283:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 82,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1292:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 83,
                        "name": "expires",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1298:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 80,
                      "name": "UpdateUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "1272:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,address,uint64)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "EmitStatement",
                  "src": "1267:39:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "518:282:0",
              "text": "@notice set the user and expires of a NFT\n @dev The zero address indicates there is no user\n Throws if `tokenId` is not valid NFT\n @param user  The new user of the NFT\n @param expires  UNIX timestamp, The new user could use the NFT before expires"
            },
            "functionSelector": "e030565e",
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUser",
            "nameLocation": "815:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 38,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "904:8:0"
            },
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "841:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "833:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "867:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "859:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "expires",
                  "nameLocation": "889:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "882:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "822:81:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "928:0:0"
            },
            "scope": 212,
            "src": "806:508:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              247
            ],
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1699:179:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 98,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1722:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                                "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                              }
                            },
                            "id": 100,
                            "indexExpression": {
                              "id": 99,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1729:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1722:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                              "typeString": "struct ERC4907.UserInfo storage ref"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expires",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "1722:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1714:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1714:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 103,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1750:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1750:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1714:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1827:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1857:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1849:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 112,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1849:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1849:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 95,
                        "id": 116,
                        "nodeType": "Return",
                        "src": "1842:17:0"
                      }
                    ]
                  },
                  "id": 118,
                  "nodeType": "IfStatement",
                  "src": "1710:161:0",
                  "trueBody": {
                    "id": 111,
                    "nodeType": "Block",
                    "src": "1767:54:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 106,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1789:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                                "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                              }
                            },
                            "id": 108,
                            "indexExpression": {
                              "id": 107,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1796:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1789:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                              "typeString": "struct ERC4907.UserInfo storage ref"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "1789:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 95,
                        "id": 110,
                        "nodeType": "Return",
                        "src": "1782:27:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 88,
              "nodeType": "StructuredDocumentation",
              "src": "1322:235:0",
              "text": "@notice Get the user address of an NFT\n @dev The zero address indicates that there is no user or the user is expired\n @param tokenId The NFT to get the user address for\n @return The user address for this NFT"
            },
            "functionSelector": "c2f1f14a",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userOf",
            "nameLocation": "1572:6:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 92,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1606:8:0"
            },
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1587:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1579:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1578:17:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1684:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1683:9:0"
            },
            "scope": 212,
            "src": "1563:315:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              255
            ],
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "2237:49:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 129,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2255:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                          "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                        }
                      },
                      "id": 131,
                      "indexExpression": {
                        "id": 130,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2262:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2255:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                        "typeString": "struct ERC4907.UserInfo storage ref"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "expires",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 23,
                    "src": "2255:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 128,
                  "id": 133,
                  "nodeType": "Return",
                  "src": "2248:30:0"
                }
              ]
            },
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "1886:210:0",
              "text": "@notice Get the user expires of an NFT\n @dev The zero value indicates that there is no user\n @param tokenId The NFT to get the user expires for\n @return The user expires for this NFT"
            },
            "functionSelector": "8fc88c48",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userExpires",
            "nameLocation": "2111:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 125,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2149:8:0"
            },
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2131:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2123:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2122:17:0"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2223:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2222:9:0"
            },
            "scope": 212,
            "src": "2102:184:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              607,
              2308
            ],
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2506:107:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 146,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "2524:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 148,
                              "name": "IERC4907",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 256,
                              "src": "2544:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC4907_$256_$",
                                "typeString": "type(contract IERC4907)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC4907_$256_$",
                                "typeString": "type(contract IERC4907)"
                              }
                            ],
                            "id": 147,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2539:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2539:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC4907_$256",
                            "typeString": "type(contract IERC4907)"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2539:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2524:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 154,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2593:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 152,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
                          "src": "2569:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC4907_$212_$",
                            "typeString": "type(contract super ERC4907)"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 607,
                        "src": "2569:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2569:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2524:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 145,
                  "id": 157,
                  "nodeType": "Return",
                  "src": "2517:88:0"
                }
              ]
            },
            "documentation": {
              "id": 136,
              "nodeType": "StructuredDocumentation",
              "src": "2296:41:0",
              "text": "@dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2352:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 142,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 140,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1460,
                  "src": "2459:6:0"
                },
                {
                  "id": 141,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2309,
                  "src": "2467:7:0"
                }
              ],
              "src": "2450:25:0"
            },
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2377:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2370:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2369:20:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2494:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2493:6:0"
            },
            "scope": 212,
            "src": "2343:270:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1446
            ],
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "2829:236:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 175,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "2867:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 176,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "2873:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 177,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2877:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2886:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 172,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2840:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC4907_$212_$",
                          "typeString": "type(contract super ERC4907)"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1446,
                      "src": "2840:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:48:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 181,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "2905:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 182,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "2913:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2905:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 184,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "2919:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                              "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                            }
                          },
                          "id": 186,
                          "indexExpression": {
                            "id": 185,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "2926:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2919:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                            "typeString": "struct ERC4907.UserInfo storage ref"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "user",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "2919:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2951:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2943:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2943:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2943:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2919:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2905:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 209,
                  "nodeType": "IfStatement",
                  "src": "2901:157:0",
                  "trueBody": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "2955:103:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2970:22:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 194,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "2977:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                                "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                              }
                            },
                            "id": 196,
                            "indexExpression": {
                              "id": 195,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "2984:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2977:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                              "typeString": "struct ERC4907.UserInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "2970:22:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "3023:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3040:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3032:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 201,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3032:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3032:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3044:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 199,
                            "name": "UpdateUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "3012:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint64_$returns$__$",
                              "typeString": "function (uint256,address,uint64)"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3012:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "EmitStatement",
                        "src": "3007:39:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "2621:55:0",
              "text": "@dev Hook that is called before any token transfer."
            },
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2691:20:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2821:8:0"
            },
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2730:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2722:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2753:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2745:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2774:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2766:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2766:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2792:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2711:92:0"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2829:0:0"
            },
            "scope": 212,
            "src": "2682:383:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 213,
        "src": "165:2903:0",
        "usedErrors": []
      }
    ],
    "src": "33:3035:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/maxek/Desktop/Sergeich/contracts/EIPs/ERC4907.sol",
    "exportedSymbols": {
      "Address": [
        2076
      ],
      "Context": [
        2098
      ],
      "ERC165": [
        2297
      ],
      "ERC4907": [
        212
      ],
      "ERC721": [
        1460
      ],
      "ERC721URIStorage": [
        1719
      ],
      "IERC165": [
        2309
      ],
      "IERC4907": [
        256
      ],
      "IERC721": [
        1576
      ],
      "IERC721Metadata": [
        1746
      ],
      "IERC721Receiver": [
        1594
      ],
      "Math": [
        3174
      ],
      "Strings": [
        2273
      ]
    },
    "id": 213,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:20:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 1720,
        "src": "57:78:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/maxek/Desktop/Sergeich/contracts/EIPs/IERC4907.sol",
        "file": "./IERC4907.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 213,
        "sourceUnit": 257,
        "src": "137:24:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "ERC721URIStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1719,
              "src": "185:16:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "185:16:0"
          },
          {
            "baseName": {
              "id": 6,
              "name": "IERC4907",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 256,
              "src": "203:8:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "203:8:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 212,
        "linearizedBaseContracts": [
          212,
          256,
          1719,
          1460,
          1746,
          1576,
          2297,
          2309,
          2098
        ],
        "name": "ERC4907",
        "nameLocation": "174:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "301:18:0",
              "statements": []
            },
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 14,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "285:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 15,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "292:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 16,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 13,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1460,
                  "src": "278:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "278:22:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "248:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "234:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "234:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "269:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 19,
                  "src": "255:21:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "233:44:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:0"
            },
            "scope": 212,
            "src": "221:98:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "ERC4907.UserInfo",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "362:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "354:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 20,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "354:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "expires",
                "nameLocation": "408:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "401:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 22,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "401:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "UserInfo",
            "nameLocation": "334:8:0",
            "nodeType": "StructDefinition",
            "scope": 212,
            "src": "327:128:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 29,
            "mutability": "mutable",
            "name": "_users",
            "nameLocation": "501:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 212,
            "src": "463:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
              "typeString": "mapping(uint256 => struct ERC4907.UserInfo)"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 25,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "471:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "463:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                "typeString": "mapping(uint256 => struct ERC4907.UserInfo)"
              },
              "valueType": {
                "id": 27,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 26,
                  "name": "UserInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24,
                  "src": "482:8:0"
                },
                "referencedDeclaration": 24,
                "src": "482:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                  "typeString": "struct ERC4907.UserInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              239
            ],
            "body": {
              "id": 86,
              "nodeType": "Block",
              "src": "928:386:0",
              "statements": [
                {
                  "assignments": [
                    42
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "956:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 86,
                      "src": "939:21:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                        "typeString": "struct ERC4907.UserInfo"
                      },
                      "typeName": {
                        "id": 41,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40,
                          "name": "UserInfo",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "939:8:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "939:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                          "typeString": "struct ERC4907.UserInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46,
                  "initialValue": {
                    "baseExpression": {
                      "id": 43,
                      "name": "_users",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "963:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                        "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                      }
                    },
                    "id": 45,
                    "indexExpression": {
                      "id": 44,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "970:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "963:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                      "typeString": "struct ERC4907.UserInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "939:39:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 49,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1030:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 50,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1030:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 51,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32,
                            "src": "1042:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 48,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "1011:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1011:39:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1065:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "989:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "989:138:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "989:138:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 58,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1153:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 57,
                            "name": "userOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "1146:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1146:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 62,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1173:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1165:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 60,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1165:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 63,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1165:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1146:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7573657220616c726561647920736574",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1177:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd834107cc09e26268f1681b4972543a58280d25a912b2d16ddb9c47ffa5d074",
                          "typeString": "literal_string \"user already set\""
                        },
                        "value": "user already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd834107cc09e26268f1681b4972543a58280d25a912b2d16ddb9c47ffa5d074",
                          "typeString": "literal_string \"user already set\""
                        }
                      ],
                      "id": 56,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1138:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1138:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:58:0"
                },
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 68,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1207:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                          "typeString": "struct ERC4907.UserInfo storage pointer"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "user",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "1207:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1219:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1207:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "1207:16:0"
                },
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 74,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1234:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserInfo_$24_storage_ptr",
                          "typeString": "struct ERC4907.UserInfo storage pointer"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expires",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "1234:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 77,
                      "name": "expires",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36,
                      "src": "1249:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1234:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1234:22:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 81,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1283:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 82,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "1292:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 83,
                        "name": "expires",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "1298:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 80,
                      "name": "UpdateUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 229,
                      "src": "1272:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint64_$returns$__$",
                        "typeString": "function (uint256,address,uint64)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85,
                  "nodeType": "EmitStatement",
                  "src": "1267:39:0"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "518:282:0",
              "text": "@notice set the user and expires of a NFT\n @dev The zero address indicates there is no user\n Throws if `tokenId` is not valid NFT\n @param user  The new user of the NFT\n @param expires  UNIX timestamp, The new user could use the NFT before expires"
            },
            "functionSelector": "e030565e",
            "id": 87,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUser",
            "nameLocation": "815:7:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 38,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "904:8:0"
            },
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "841:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "833:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "833:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "867:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "859:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "859:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "expires",
                  "nameLocation": "889:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 87,
                  "src": "882:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "882:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "822:81:0"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "928:0:0"
            },
            "scope": 212,
            "src": "806:508:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              247
            ],
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1699:179:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "baseExpression": {
                              "id": 98,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1722:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                                "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                              }
                            },
                            "id": 100,
                            "indexExpression": {
                              "id": 99,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1729:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1722:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                              "typeString": "struct ERC4907.UserInfo storage ref"
                            }
                          },
                          "id": 101,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expires",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "1722:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 97,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1714:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 96,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1714:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1714:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 103,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1750:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1750:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1714:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 117,
                    "nodeType": "Block",
                    "src": "1827:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 114,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1857:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1849:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 112,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1849:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1849:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 95,
                        "id": 116,
                        "nodeType": "Return",
                        "src": "1842:17:0"
                      }
                    ]
                  },
                  "id": 118,
                  "nodeType": "IfStatement",
                  "src": "1710:161:0",
                  "trueBody": {
                    "id": 111,
                    "nodeType": "Block",
                    "src": "1767:54:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 106,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1789:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                                "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                              }
                            },
                            "id": 108,
                            "indexExpression": {
                              "id": 107,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 90,
                              "src": "1796:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1789:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                              "typeString": "struct ERC4907.UserInfo storage ref"
                            }
                          },
                          "id": 109,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "user",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "1789:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 95,
                        "id": 110,
                        "nodeType": "Return",
                        "src": "1782:27:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 88,
              "nodeType": "StructuredDocumentation",
              "src": "1322:235:0",
              "text": "@notice Get the user address of an NFT\n @dev The zero address indicates that there is no user or the user is expired\n @param tokenId The NFT to get the user address for\n @return The user address for this NFT"
            },
            "functionSelector": "c2f1f14a",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userOf",
            "nameLocation": "1572:6:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 92,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1606:8:0"
            },
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1587:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1579:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1578:17:0"
            },
            "returnParameters": {
              "id": 95,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 94,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1684:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 93,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1683:9:0"
            },
            "scope": 212,
            "src": "1563:315:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              255
            ],
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "2237:49:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 129,
                        "name": "_users",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2255:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                          "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                        }
                      },
                      "id": 131,
                      "indexExpression": {
                        "id": 130,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123,
                        "src": "2262:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2255:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                        "typeString": "struct ERC4907.UserInfo storage ref"
                      }
                    },
                    "id": 132,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "expires",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 23,
                    "src": "2255:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 128,
                  "id": 133,
                  "nodeType": "Return",
                  "src": "2248:30:0"
                }
              ]
            },
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "1886:210:0",
              "text": "@notice Get the user expires of an NFT\n @dev The zero value indicates that there is no user\n @param tokenId The NFT to get the user expires for\n @return The user expires for this NFT"
            },
            "functionSelector": "8fc88c48",
            "id": 135,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "userExpires",
            "nameLocation": "2111:11:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 125,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2149:8:0"
            },
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2131:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2123:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2122:17:0"
            },
            "returnParameters": {
              "id": 128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2223:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2222:9:0"
            },
            "scope": 212,
            "src": "2102:184:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              607,
              2308
            ],
            "body": {
              "id": 158,
              "nodeType": "Block",
              "src": "2506:107:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 146,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "2524:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 148,
                              "name": "IERC4907",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 256,
                              "src": "2544:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC4907_$256_$",
                                "typeString": "type(contract IERC4907)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_IERC4907_$256_$",
                                "typeString": "type(contract IERC4907)"
                              }
                            ],
                            "id": 147,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967269,
                            "src": "2539:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2539:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_IERC4907_$256",
                            "typeString": "type(contract IERC4907)"
                          }
                        },
                        "id": 150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "2539:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "2524:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 154,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "2593:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 152,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967271,
                          "src": "2569:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC4907_$212_$",
                            "typeString": "type(contract super ERC4907)"
                          }
                        },
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 607,
                        "src": "2569:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2569:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2524:81:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 145,
                  "id": 157,
                  "nodeType": "Return",
                  "src": "2517:88:0"
                }
              ]
            },
            "documentation": {
              "id": 136,
              "nodeType": "StructuredDocumentation",
              "src": "2296:41:0",
              "text": "@dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 159,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2352:17:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 142,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 140,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1460,
                  "src": "2459:6:0"
                },
                {
                  "id": 141,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2309,
                  "src": "2467:7:0"
                }
              ],
              "src": "2450:25:0"
            },
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2377:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2370:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2370:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2369:20:0"
            },
            "returnParameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 144,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 159,
                  "src": "2494:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 143,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2494:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2493:6:0"
            },
            "scope": 212,
            "src": "2343:270:0",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1446
            ],
            "body": {
              "id": 210,
              "nodeType": "Block",
              "src": "2829:236:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 175,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "2867:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 176,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "2873:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 177,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2877:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2886:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 172,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "2840:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ERC4907_$212_$",
                          "typeString": "type(contract super ERC4907)"
                        }
                      },
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1446,
                      "src": "2840:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2840:48:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2840:48:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 181,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 162,
                        "src": "2905:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 182,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "2913:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2905:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 184,
                            "name": "_users",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "2919:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                              "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                            }
                          },
                          "id": 186,
                          "indexExpression": {
                            "id": 185,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 166,
                            "src": "2926:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2919:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                            "typeString": "struct ERC4907.UserInfo storage ref"
                          }
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "user",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 21,
                        "src": "2919:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2951:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2943:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2943:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2943:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2919:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2905:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 209,
                  "nodeType": "IfStatement",
                  "src": "2901:157:0",
                  "trueBody": {
                    "id": 208,
                    "nodeType": "Block",
                    "src": "2955:103:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2970:22:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 194,
                              "name": "_users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "2977:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserInfo_$24_storage_$",
                                "typeString": "mapping(uint256 => struct ERC4907.UserInfo storage ref)"
                              }
                            },
                            "id": 196,
                            "indexExpression": {
                              "id": 195,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "2984:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2977:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserInfo_$24_storage",
                              "typeString": "struct ERC4907.UserInfo storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "2970:22:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "3023:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 203,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3040:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3032:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 201,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3032:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 204,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3032:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3044:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 199,
                            "name": "UpdateUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 229,
                            "src": "3012:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint64_$returns$__$",
                              "typeString": "function (uint256,address,uint64)"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3012:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 207,
                        "nodeType": "EmitStatement",
                        "src": "3007:39:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 160,
              "nodeType": "StructuredDocumentation",
              "src": "2621:55:0",
              "text": "@dev Hook that is called before any token transfer."
            },
            "id": 211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "2691:20:0",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 170,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2821:8:0"
            },
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 162,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2730:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2722:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2722:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2753:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2745:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2774:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2766:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2766:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 211,
                  "src": "2792:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2711:92:0"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2829:0:0"
            },
            "scope": 212,
            "src": "2682:383:0",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 213,
        "src": "165:2903:0",
        "usedErrors": []
      }
    ],
    "src": "33:3035:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.0e36fba0.mod.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2023-03-01T14:36:12.837Z"
}